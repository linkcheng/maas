version: '3.8'

services:
  # MySQL数据库服务
  db:
    image: mysql:8.0
    container_name: mcp-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-mcpdb}
      MYSQL_USER: ${MYSQL_USER:-mcpuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-mcppassword}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-rootpassword}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  # MCP Server 应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: ${DOCKER_REGISTRY:-localhost}/mcp-server:${APP_VERSION:-latest}
    container_name: mcp-server
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      # 数据库配置
      DB_URL: mysql+aiomysql://${MYSQL_USER:-mcpuser}:${MYSQL_PASSWORD:-mcppassword}@db:3306/${MYSQL_DATABASE:-mcpdb}?charset=utf8mb4
      # 应用配置
      APP_ENV: ${APP_ENV:-prod}
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 8000
      SERVER_RELOAD: "False"
      SERVER_CORS_ORIGINS: ${SERVER_CORS_ORIGINS:-*}
      # 日志配置
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      LOG_DIR: /app/logs
      # LLM配置
      LLM_API_KEY: ${LLM_API_KEY:-your-api-key}
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
    ports:
      - "${SERVER_PORT:-8000}:8000"
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  mcp-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local 